name: Release new version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (major, minor & patch)'
        required: true
        default: 'minor'

jobs:
  # TODO - Test

  release:
    name: Bump version
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.push.outputs.SHA }}
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: Setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'
      - run: npm --no-git-tag-version version ${{ github.event.inputs.version }}
      - name: Get npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - run: echo "TODO - Generate chagnelog"
      - name: Commit changes
        id: push
        run: |
          git add .
          git commit -m "Release ${{steps.package-version.outputs.current-version}}"
          git push
          echo "::set-output name=SHA::$(git rev-parse HEAD)"

  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          ref: ${{ needs.release.outputs.commit }}
          fetch-depth: 0
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

  # TODO - Publish docs

  create_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [release, build-and-publish]
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          ref: ${{ needs.release.outputs.commit }}
          fetch-depth: 0
      - id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      # - id: extract_release_notes
      #   uses: ffurrer2/extract-release-notes@v1
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: v${{ steps.package-version.outputs.current-version }}
          # body: ${{ steps.extract_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false
